name: Generate app installation access token
description: Creates an installation access token with selected permissions from Github app ... installed on org 

inputs:
  app_id:
    required: true
  app_private_key:
    required: true
  app_installation_id:
    required: true
  permissions:
    description: "Comma separated list of permissions, e.g. contents:write,issues:read."
    required: false

outputs:
  token:
    description: "App installation access token"
    value: ${{ steps.generate_token.outputs.result }}

runs:
  using: "composite"
  steps:
    - name: Install dependencies
      run: npm install @octokit/auth-app @octokit/rest

    - name: Generate Github app installation token
      id: generate_token
      uses: actions/github-script@v6
      env:
        APPLICATION_ID: ${{ inputs.app_id }}
        APPLICATION_PRIVATE_KEY: ${{ inputs.app_private_key }}
        APPLICATION_INSTALLATION_ID: ${{ inputs.app_installation_id }}
      with:
        script: |            
          const { Octokit } = require("@octokit/rest");
          const { createAppAuth } = require("@octokit/auth-app");

          const appOctokit = new Octokit({
            authStrategy: createAppAuth,
            auth: {
              appId: process.env.APPLICATION_ID,
              privateKey: process.env.APPLICATION_PRIVATE_KEY,
              installationId: process.env.APPLICATION_INSTALLATION_ID
            },
            request: {
              fetch: fetch,
            }
          });

          const { token } = await appOctokit.auth({
            type: "installation",
            permissions: {
              "contents":"read"
            }
          });

          return token

    - name: Get token
      run: echo "${{steps.generate_token.outputs.result}}"
