name: Generate app installation access token
description: Creates an installation access token with selected permissions from Github app ... installed on org 

inputs:
  app_id:
    required: true
  app_private_key:
    required: true
  app_installation_id:
    required: true
  permissions:
    description: "Comma separated list of permissions, e.g. contents:write,issues:read."
    required: false

outputs:
  token:
    description: "App installation access token"
    value: ${{ steps.generate_token.outputs.result }}

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        path: tmp

    - uses: actions/setup-node@v3
      with:
        node-version: 16
  
    - name: Install dependencies
      shell: bash
      run: npm install jsonwebtoken

    - name: Generate Github app installation token
      id: generate_token
      uses: actions/github-script@v6
      env:
        APPLICATION_ID: ${{ inputs.app_id }}
        APPLICATION_PRIVATE_KEY: ${{ inputs.app_private_key }}
        APPLICATION_INSTALLATION_ID: ${{ inputs.app_installation_id }}
        REPOSITORY_ID: ${{ github.repository_id }}
      with:
        result-encoding: string
        script: |
          const appId = process.env.APPLICATION_ID;
          const privateKey = process.env.APPLICATION_PRIVATE_KEY;
          const installationId = process.env.APPLICATION_INSTALLATION_ID;
          const jsonwebtoken = require('jsonwebtoken')
          const now = Math.floor(Date.now() / 1000)
          const payload = {
            iat: now, // Issued at time
            exp: now + 60, // JWT expiration time
            iss: appId
          }
          const bearer = jsonwebtoken.sign(payload, privateKey, {algorithm: 'RS256'})

          return bearer;

    - name: Get token
      shell: bash
      run: echo "${{steps.generate_token.outputs.result}}"

    - name: Generate Github app installation tokenn
      uses: actions/github-script@v6
      env:
       APPLICATION_INSTALLATION_ID: ${{ inputs.app_installation_id }}
      with:
        # github-token: ${{steps.generate_token.outputs.result}}
        script: |
          github.rest.apps.getAuthenticated();
